#include<ESP8266WiFi.h>

const char* ssid="~"; // 와이파이 이름 
const char* password="~"; // 와이파이 비번 


// 서버 인스턴스 생성 
// 포트 설정 
WiFiServer server(80); //80포트는 http의 기본 포트 


//setup 함수. WiFi 연결 설정 
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  delay(10);

  //Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  // WiFi 연결 시도 
  WiFi.begin(ssid,password);
  // 연결될 때까지 계속 실행
  while(WiFi.status()!=WL_CONNECTED){ 
      delay(500);
      Serial.print(".");
  } 
  Serial.println("");
  Serial.println("WiFi conntected");

  //Print the IP address
  Serial.println(WiFi.localIP());
}


// loop() 함수. Client 접속이 들어올 때마다 웹페이지를 전송한다. 
void loop() {
  // put your main code here, to run repeatedly:
  // Check if a client has connected 
  WiFiClient client = server.available();
  if(!client){ 
    return; 
  }

  // 클라이언트가 데이터를 보낼 때까지 기다린다. 
  Serial.println("new client"); 
  //while(!client.available()){ 
  // delay(1);
  // } 

  // 요청의 첫번째 라인을읽는다. 
  String req = client.readStringUntil('\r');
  Serial.println(req);
  client.flush(); 

  // 응답 준비 
  String s="<html>";
  s=s+"<meta name='viewport' content='width=device-width,initial-scale=1.0'/>";
  //s=s+"<meta http-equiv='refresh' content='5'/>";
  s=s+"<meta http-equiv='Content-Type' content='text/html;charset=utf-8' />";
  s=s+"<head></head><body>안녕하세요!</body></html>";

  // 클라이언트에게 응답을 보낸다. 
  client.print(s);
  delay(1);
  Serial.println("Client disconnected"); 

  //The client will actually be disconnected 
  //when the function returns and 'client' object is destroyed
  

  
  }

